#!/bin/bash

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
  if $(brew list $1 >/dev/null); then
    printf "%s already installed.\n" "$1"
    return 0
  fi

  e_warning "Missing formula: $1"
  return 1
}

brew_tap() {
  if brew tap | grep $1 &> /dev/null
  then
    echo "already tapped - $1"
    false
  else
    e_header "Tapping $1"
    brew tap $1
  fi
}

run_brew() {
  # Check for Homebrew
  if type_exists 'brew'; then
    # Use the latest version of Homebrew
    e_header "Updating Homebrew..."
    brew update
    [[ $? ]] && e_success "Done"

    # Upgrade any already-installed formulae
    e_header "Updating any existing Homebrew formulae..."
    brew upgrade --all
    [[ $? ]] && e_success "Done"

    # Add necessary brew taps
    e_header "Adding brew taps..."
    local -a desired_taps=(
      'caskroom/cask'
      'caskroom/versions'
      'homebrew/completions'
      'homebrew/dupes'
      'homebrew/versions'
      'homebrew/php'
    )

    for index in ${!desired_taps[*]}
    do
      brew_tap ${desired_taps[$index]}
    done

    # update or install desired formulae
    e_header "Checking status of desired Homebrew formulae..."
    local list_formulae
    local -a missing_formulae

    # ** array items can include options for package **
    local -a desired_formulae=(
      'coreutils' # GNU core utilities (those that come with OS X are outdated)
      'git'
      'ack'
      'bash'
      'bash-completion'
      'caskroom/cask/brew-cask'
      'mysql'
      'nginx'
      'mongodb'
      'php55'
      'php55-apcu'
      'php55-intl'
      'php55-mcrypt'
      'php55-mongo'
      'jpeg'
      'jq'
      'rbenv'
      'rsync'
      'ruby-build'
      'pyenv'
      'pyenv-virtualenv'
      'phantomjs'
      'tree'
      'vagrant-completion'
      'wget'
      'wp-cli --ignore-dependencies'
    )

    for index in ${!desired_formulae[*]}
    do
      if ! formula_exists ${desired_formulae[$index]}; then
        # Store the name (and options) of every missing formula
        missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
      fi
    done

    if [[ "$missing_formulae" ]]; then
      e_header "Installing missing Homebrew formulae..."

      for index in ${!desired_formulae[*]}
      do
        brew install ${desired_formulae[$index]}
      done
    fi

    # Cleanup brew
    e_header "Cleaning brew..."
    brew cleanup --outdated
    brew cleanup
    [[ $? ]] && e_success "Done"
  else
    printf "\n"
    e_error "Error: Homebrew not found."
    printf "Aborting...\n"
    exit
  fi
}
